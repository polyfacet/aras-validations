<AML>
 <Item type="Method" id="6D629C45030045059945CA4B71922A33" action="add">
  <comments>Checks the Validation tab for errors before releasing</comments>
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[        // Checks the Validation tab for errors before releasing

        Inn = this.getInnovator();
        ItemType = this.getAttribute("type");

        string targetState = GetTargetState(eventData);

        if (targetState == "Released") {
            string idList = this.getAttribute("idlist");
            List<string> ids = idList.Split(',').ToList();
                
            foreach (string id in ids) {
                Item validationResult = Validate(id);
                if (validationResult.isError()) {
                    return validationResult;
                }
            }
        }
        // All OK, validation passed
        return this;

    } // End Main method
    
    private Innovator Inn;
    private string ItemType;
    private const string VALIDATION_RELATIONSHIP = "HC_Part_Validations";
    private const string VALIDATION_TYPE_NAME = "HC_Validation";
    private string FirstErrorMessageDescription;
    
    private string GetTargetState(Aras.Server.Core.OnBeforePromoteEventArgs eventData) {
        string key = eventData.ItemTransitions.Keys.First();        
        Aras.Server.Core.LifeCycleTransitionInfo lcTransInfo = eventData.ItemTransitions[key];
        return lcTransInfo.ToState.Name;
    }
    
    private Item Validate(string id) {
        int errorCount = ErrorValidationsCount(id,VALIDATION_RELATIONSHIP);
        if (errorCount > 0) {
            Item partItem = Inn.newItem(ItemType,"get");
            partItem.setID(id);
            partItem.setAttribute("select", "item_number");
            partItem = partItem.apply();
            string itemNumber = partItem.getProperty("item_number" ,"");

            string errorMessage = $@"Part number '{itemNumber}' can not be released.
                                    {FirstErrorMessageDescription}
                                    
                                    It has {errorCount.ToString()} validation error(s).
                                    Please check the validation tab and take actions before releasing.";
            return Inn.newError(errorMessage);
        }
        return Inn.newResult("OK");
    }

    private int ErrorValidationsCount(string id, string relationshipName) {
        int result = 0;
        string amlQuery = $@"<AML>
                                <Item action='get' type='Part' id='{id}' select='id'>
                                    <Relationships><Item action='get' type='{relationshipName}' /></Relationships>
                                </Item>>
                            </AML>";
        Item queryResult = Inn.applyAML(amlQuery);
        
        Item validations = queryResult.getItemsByXPath($"//Item[@type='{VALIDATION_TYPE_NAME}']");
        
        for (int i = 0; i<validations.getItemCount();i++) {
            string validationType = validations.getItemByIndex(i).getProperty("validation_type","");
            if (validationType == "Error") {
                result += 1; 
                if (result == 1) {
                    // Store the first error message description. To give some valueble info to the user in the error message. (E.g. when not working in the std web client)
                    FirstErrorMessageDescription = validations.getItemByIndex(i).getProperty("description","");
                }
            }
        }
        return result;
    }
}
// END CLASS

class fin
{
  void method()
  {
    ]]></method_code>
  <method_type>C#</method_type>
  <name>HC_PartBeforePromote</name>
 </Item>
</AML>